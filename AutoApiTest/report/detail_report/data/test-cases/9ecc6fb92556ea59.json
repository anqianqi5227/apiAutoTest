{
  "uid" : "9ecc6fb92556ea59",
  "name" : "test_case[case_data0]",
  "fullName" : "tests.TestScript.projectApi.test_project.TestProject#test_case",
  "historyId" : "eb0fedcc5532d1b142ced3c988e9efac",
  "time" : {
    "start" : 1617519995039,
    "stop" : 1617519995304,
    "duration" : 265
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'check'",
  "statusTrace" : "self = <test_project.TestProject object at 0x11e1960f0>\ncase_data = {'address': '/h5/api/project/v1/${project_code}$', 'case_id': 1, 'check_type': 'only_check_status', 'global_relevance': True, ...}\nsetupClass = {'assignSign': '*gen_sign(curUidCode=_GAQsTvZuwo&projectId=${project_id}$&uids=${uid}$&secret=92b13c1b3b97492daa47a160...beginTime': '*gen_stamp_date_today_begin_time()*', 'corpId': '43', 'endTime': '*gen_stamp_date_today_end_time()*', ...}\n\n    @pytest.mark.run(order=case_dict[\"test_info\"][\"run_order\"])\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"], ids=[])\n    @allure.story(\"project\")\n    def test_case(self, case_data, setupClass):\n        self.relevance = setupTest(relevance_path, case_data, setupClass)\n>       api_send_check(case_data, case_dict, case_path, self.relevance)\n\n/Users/nali/AutoApiTest/tests/TestScript/projectApi/test_project.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'address': '/h5/api/project/v1/${project_code}$', 'case_id': 1, 'check_type': 'only_check_status', 'global_relevance': True, ...}\ncase_dict = {'premise': [{'address': '/co-oms/api/project/add', 'check_type': 'only_check_status', 'file': False, 'global_relevanc...relevance': True, ...}], 'test_info': {'address': None, 'case_level': 'trivial', 'cookies': False, 'file': False, ...}}\ncase_path = '/Users/nali/AutoApiTest/tests/TestCases/projectApi'\nrelevance = {'assignSign': '01A433DCD14EFB318BF3B628AD2DC10D', 'beginTime': 1617465600000, 'corpId': 43, 'endTime': 1617551999000, ...}\n\n    def api_send_check(case_data, case_dict, case_path, relevance):\n        \"\"\"\n        验证测试是否通过并且将接口参数中的关联字段写入关联池\n        :param case_data: 测试case\n        :param case_dict: 测试用例文件\n        :param case_path: 用例文件路径\n        :param relevance: 用例关联池\n    \n        \"\"\"\n        # 获取接口返回值\n        # print(case_dict)\n        # print(case_dict['is_run'])\n        if case_data['is_run'] is not False:\n                # or case_data['is_run'] is None:\n            res = api_send.api_send(case_data, case_dict, case_path, relevance)\n            print(res)\n            test_name = case_data['test_name']\n>           check_data = case_data['check']\nE           KeyError: 'check'\n\n/Users/nali/AutoApiTest/common/unit/api_send_check.py:29: KeyError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setupClass",
    "time" : {
      "start" : 1617519995036,
      "stop" : 1617519995037,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'check'",
    "statusTrace" : "self = <test_project.TestProject object at 0x11e1960f0>\ncase_data = {'address': '/h5/api/project/v1/${project_code}$', 'case_id': 1, 'check_type': 'only_check_status', 'global_relevance': True, ...}\nsetupClass = {'assignSign': '*gen_sign(curUidCode=_GAQsTvZuwo&projectId=${project_id}$&uids=${uid}$&secret=92b13c1b3b97492daa47a160...beginTime': '*gen_stamp_date_today_begin_time()*', 'corpId': '43', 'endTime': '*gen_stamp_date_today_end_time()*', ...}\n\n    @pytest.mark.run(order=case_dict[\"test_info\"][\"run_order\"])\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"], ids=[])\n    @allure.story(\"project\")\n    def test_case(self, case_data, setupClass):\n        self.relevance = setupTest(relevance_path, case_data, setupClass)\n>       api_send_check(case_data, case_dict, case_path, self.relevance)\n\n/Users/nali/AutoApiTest/tests/TestScript/projectApi/test_project.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'address': '/h5/api/project/v1/${project_code}$', 'case_id': 1, 'check_type': 'only_check_status', 'global_relevance': True, ...}\ncase_dict = {'premise': [{'address': '/co-oms/api/project/add', 'check_type': 'only_check_status', 'file': False, 'global_relevanc...relevance': True, ...}], 'test_info': {'address': None, 'case_level': 'trivial', 'cookies': False, 'file': False, ...}}\ncase_path = '/Users/nali/AutoApiTest/tests/TestCases/projectApi'\nrelevance = {'assignSign': '01A433DCD14EFB318BF3B628AD2DC10D', 'beginTime': 1617465600000, 'corpId': 43, 'endTime': 1617551999000, ...}\n\n    def api_send_check(case_data, case_dict, case_path, relevance):\n        \"\"\"\n        验证测试是否通过并且将接口参数中的关联字段写入关联池\n        :param case_data: 测试case\n        :param case_dict: 测试用例文件\n        :param case_path: 用例文件路径\n        :param relevance: 用例关联池\n    \n        \"\"\"\n        # 获取接口返回值\n        # print(case_dict)\n        # print(case_dict['is_run'])\n        if case_data['is_run'] is not False:\n                # or case_data['is_run'] is None:\n            res = api_send.api_send(case_data, case_dict, case_path, relevance)\n            print(res)\n            test_name = case_data['test_name']\n>           check_data = case_data['check']\nE           KeyError: 'check'\n\n/Users/nali/AutoApiTest/common/unit/api_send_check.py:29: KeyError",
    "steps" : [ {
      "name" : "get请求接口",
      "time" : {
        "start" : 1617519995042,
        "stop" : 1617519995046,
        "duration" : 4
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b86b0294e86fd547",
        "name" : "请求接口：",
        "source" : "b86b0294e86fd547.attach",
        "type" : "text/plain",
        "size" : 14
      }, {
        "uid" : "92c53bc32720b17a",
        "name" : "用例描述：",
        "source" : "92c53bc32720b17a.attach",
        "type" : "text/plain",
        "size" : 12
      }, {
        "uid" : "a39b8c01bc6f3358",
        "name" : "请求地址",
        "source" : "a39b8c01bc6f3358.attach",
        "type" : "text/plain",
        "size" : 53
      }, {
        "uid" : "7ef84c4c49adcd80",
        "name" : "请求头",
        "source" : "7ef84c4c49adcd80.attach",
        "type" : "text/plain",
        "size" : 68
      }, {
        "uid" : "f8f7a40754d0ec87",
        "name" : "请求参数",
        "source" : "f8f7a40754d0ec87.attach",
        "type" : "text/plain",
        "size" : 4
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 5,
      "shouldDisplayMessage" : false,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "3868832377c2d735",
      "name" : "log",
      "source" : "3868832377c2d735.txt",
      "type" : "text/plain",
      "size" : 1131
    }, {
      "uid" : "acb0687e05f31a09",
      "name" : "stdout",
      "source" : "acb0687e05f31a09.txt",
      "type" : "text/plain",
      "size" : 1225
    } ],
    "parameters" : [ ],
    "stepsCount" : 1,
    "attachmentsCount" : 7,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "project"
  }, {
    "name" : "feature",
    "value" : "project"
  }, {
    "name" : "tag",
    "value" : "run(order=1)"
  }, {
    "name" : "parentSuite",
    "value" : "tests.TestScript.projectApi"
  }, {
    "name" : "suite",
    "value" : "test_project"
  }, {
    "name" : "subSuite",
    "value" : "TestProject"
  }, {
    "name" : "host",
    "value" : "anqidediannao.local"
  }, {
    "name" : "thread",
    "value" : "45462-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.TestScript.projectApi.test_project"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_data",
    "value" : "{'test_name': 'project_detail', 'case_id': 1, 'is_run': None, 'info': '项目详情', 'host': '${HOST2}$', 'address': '/h5/api/project/v1/${project_code}$', 'http_type': 'https', 'request_type': 'get', 'parameter_type': None, 'headers': '${headers1}$', 'parameter': None, 'timeout': 10, 'check_type': 'only_check_status', 'global_relevance': True, 'relevance': {'chenkin_code': 'checkinCode'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "run(order=1)" ]
  },
  "source" : "9ecc6fb92556ea59.json",
  "parameterValues" : [ "{'test_name': 'project_detail', 'case_id': 1, 'is_run': None, 'info': '项目详情', 'host': '${HOST2}$', 'address': '/h5/api/project/v1/${project_code}$', 'http_type': 'https', 'request_type': 'get', 'parameter_type': None, 'headers': '${headers1}$', 'parameter': None, 'timeout': 10, 'check_type': 'only_check_status', 'global_relevance': True, 'relevance': {'chenkin_code': 'checkinCode'}}" ]
}