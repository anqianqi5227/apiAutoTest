{
  "uid" : "acc2eea9491adcd1",
  "name" : "test_premise[login0-None]",
  "fullName" : "tests.TestScript.infoApi.test_info.TestPremise#test_premise",
  "historyId" : "256f9c017328cb4f09fc2dfaf995633a",
  "time" : {
    "start" : 1617289344682,
    "stop" : 1617289344682,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'is_run'",
  "statusTrace" : "request = <SubRequest 'login' for <Function test_premise[login0-None]>>\n\n    @pytest.fixture(scope='function',autouse=True,params=case_dict['test_case'])\n    def login(request):\n        for i in [\"GlobalRelevance.ini\", \"ModuleRelevance.ini\"]:\n            relevance_file = os.path.join(relevance_path, i)\n            cf = Config(relevance_file)\n            # print(relevance_file)\n            cf.add_conf('relevance')\n        logging.info(\"执行全局用例依赖接口，初始化数据！\")\n        relevance = re.ini_relevance(re.read_relevance(case_path, 'relevance'))\n        print(relevance)\n>       api_send_check(request.param, case_dict, case_path, relevance)\n\n/Users/nali/AutoApiTest/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': False, 'file': False, ...}\ncase_dict = {'premise': [None], 'test_case': [{'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': ...e, 'file': False, ...}], 'test_info': {'address': None, 'case_level': 'blocker', 'cookies': False, 'file': False, ...}}\ncase_path = '/Users/nali/AutoApiTest/tests/CommonApi/loginApi'\nrelevance = {'sign_h5_login': 'F017A0CD674A8B7A4F52B56898D78E6A'}\n\n    def api_send_check(case_data, case_dict, case_path, relevance):\n        \"\"\"\n        验证测试是否通过并且将接口参数中的关联字段写入关联池\n        :param case_data: 测试case\n        :param case_dict: 测试用例文件\n        :param case_path: 用例文件路径\n        :param relevance: 用例关联池\n    \n        \"\"\"\n        # 获取接口返回值\n        # print(case_dict)\n        # print(case_dict['is_run'])\n>       if case_data['is_run'] is not False:\nE       KeyError: 'is_run'\n\n/Users/nali/AutoApiTest/common/unit/api_send_check.py:24: KeyError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setupClass",
    "time" : {
      "start" : 1617289344683,
      "stop" : 1617289344683,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "login",
    "time" : {
      "start" : 1617289344683,
      "stop" : 1617289344687,
      "duration" : 4
    },
    "status" : "broken",
    "statusMessage" : "KeyError: 'is_run'\n",
    "statusTrace" : "  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/_pytest/fixtures.py\", line 964, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/_pytest/fixtures.py\", line 792, in call_fixture_func\n    res = fixturefunc(**kwargs)\n  File \"/Users/nali/AutoApiTest/conftest.py\", line 28, in login\n    api_send_check(request.param, case_dict, case_path, relevance)\n  File \"/Users/nali/AutoApiTest/common/unit/api_send_check.py\", line 24, in api_send_check\n    if case_data['is_run'] is not False:\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'is_run'",
    "statusTrace" : "request = <SubRequest 'login' for <Function test_premise[login0-None]>>\n\n    @pytest.fixture(scope='function',autouse=True,params=case_dict['test_case'])\n    def login(request):\n        for i in [\"GlobalRelevance.ini\", \"ModuleRelevance.ini\"]:\n            relevance_file = os.path.join(relevance_path, i)\n            cf = Config(relevance_file)\n            # print(relevance_file)\n            cf.add_conf('relevance')\n        logging.info(\"执行全局用例依赖接口，初始化数据！\")\n        relevance = re.ini_relevance(re.read_relevance(case_path, 'relevance'))\n        print(relevance)\n>       api_send_check(request.param, case_dict, case_path, relevance)\n\n/Users/nali/AutoApiTest/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': False, 'file': False, ...}\ncase_dict = {'premise': [None], 'test_case': [{'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': ...e, 'file': False, ...}], 'test_info': {'address': None, 'case_level': 'blocker', 'cookies': False, 'file': False, ...}}\ncase_path = '/Users/nali/AutoApiTest/tests/CommonApi/loginApi'\nrelevance = {'sign_h5_login': 'F017A0CD674A8B7A4F52B56898D78E6A'}\n\n    def api_send_check(case_data, case_dict, case_path, relevance):\n        \"\"\"\n        验证测试是否通过并且将接口参数中的关联字段写入关联池\n        :param case_data: 测试case\n        :param case_dict: 测试用例文件\n        :param case_path: 用例文件路径\n        :param relevance: 用例关联池\n    \n        \"\"\"\n        # 获取接口返回值\n        # print(case_dict)\n        # print(case_dict['is_run'])\n>       if case_data['is_run'] is not False:\nE       KeyError: 'is_run'\n\n/Users/nali/AutoApiTest/common/unit/api_send_check.py:24: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "3d906bdf1315b112",
      "name" : "log",
      "source" : "3d906bdf1315b112.txt",
      "type" : "text/plain",
      "size" : 80
    }, {
      "uid" : "e6cb8d9af490b971",
      "name" : "stdout",
      "source" : "e6cb8d9af490b971.txt",
      "type" : "text/plain",
      "size" : 179
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "info"
  }, {
    "name" : "parentSuite",
    "value" : "tests.TestScript.infoApi"
  }, {
    "name" : "suite",
    "value" : "test_info"
  }, {
    "name" : "subSuite",
    "value" : "TestPremise"
  }, {
    "name" : "host",
    "value" : "anqidediannao.local"
  }, {
    "name" : "thread",
    "value" : "39422-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.TestScript.infoApi.test_info"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_data",
    "value" : "None"
  }, {
    "name" : "login",
    "value" : "{'test_name': 'login_h5', 'info': '密码登录m站', 'host': '${HOST1}$', 'headers': '${headers1}$', 'address': '/passport/api/pwdLogin', 'http_type': 'https', 'request_type': 'post_cookie', 'parameter_type': 'data', 'parameter': {'passport': 17521200974, 'password': 'anqi666', 'passportType': 1, 'sign': '${sign_h5_login}$'}, 'timeout': 10, 'cookies': False, 'check_type': 'only_check_status', 'file': False, 'global_relevance': None, 'relevance': None}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "acc2eea9491adcd1.json",
  "parameterValues" : [ "None", "{'test_name': 'login_h5', 'info': '密码登录m站', 'host': '${HOST1}$', 'headers': '${headers1}$', 'address': '/passport/api/pwdLogin', 'http_type': 'https', 'request_type': 'post_cookie', 'parameter_type': 'data', 'parameter': {'passport': 17521200974, 'password': 'anqi666', 'passportType': 1, 'sign': '${sign_h5_login}$'}, 'timeout': 10, 'cookies': False, 'check_type': 'only_check_status', 'file': False, 'global_relevance': None, 'relevance': None}" ]
}