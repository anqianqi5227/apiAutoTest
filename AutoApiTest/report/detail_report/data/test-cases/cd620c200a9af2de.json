{
  "uid" : "cd620c200a9af2de",
  "name" : "test_case[case_data0]",
  "fullName" : "tests.TestScript.infoApi.test_info.TestPremise#test_case",
  "historyId" : "88ff85c5941ab1b201b71956773c97b8",
  "time" : {
    "start" : 1617288487381,
    "stop" : 1617288487383,
    "duration" : 2
  },
  "status" : "broken",
  "statusMessage" : "configparser.NoSectionError: No section: 'cookie'",
  "statusTrace" : "self = <common.config_module.config_read.ConfigOveride object at 0x112fad1d0>\nsection = 'cookie', raw = False, vars = None\n\n    def items(self, section=_UNSET, raw=False, vars=None):\n        \"\"\"Return a list of (name, value) tuples for each option in a section.\n    \n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n    \n        The section DEFAULT is special.\n        \"\"\"\n        if section is _UNSET:\n            return super().items()\n        d = self._defaults.copy()\n        try:\n>           d.update(self._sections[section])\nE           KeyError: 'cookie'\n\n/Users/nali/anaconda3/lib/python3.7/configparser.py:845: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_info.TestPremise object at 0x112fb9fd0>\ncase_data = {'address': '/mapi/user/info', 'check': {'check_type': 'Regular_check', 'expected_code': 200, 'expected_result': ['\"corpId\": 43', '\"corpCode\":${uidCode}$']}, 'cookies': True, 'file': False, ...}\nsetupClass = {}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"], ids=[])\n    @allure.story(\"info\")\n    def test_case(self, case_data, setupClass):\n        self.relevance = setupTest(relevance_path, case_data, setupClass)\n>       api_send_check(case_data, case_dict, case_path, self.relevance)\n\n/Users/nali/AutoApiTest/tests/TestScript/infoApi/test_info.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Users/nali/AutoApiTest/common/unit/api_send_check.py:26: in api_send_check\n    res = api_send.api_send(case_data, case_dict, case_path, relevance)\n/Users/nali/AutoApiTest/common/unit/api_send.py:73: in api_send\n    cookie = read_relevance(cookie_path, 'cookie')\n/Users/nali/AutoApiTest/common/unit/initialize_relevance.py:22: in read_relevance\n    rele_dict = cf.read_config(key)\n/Users/nali/AutoApiTest/common/config_module/config_read.py:88: in read_config\n    option_value_list = cf.items(section)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.config_module.config_read.ConfigOveride object at 0x112fad1d0>\nsection = 'cookie', raw = False, vars = None\n\n    def items(self, section=_UNSET, raw=False, vars=None):\n        \"\"\"Return a list of (name, value) tuples for each option in a section.\n    \n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n    \n        The section DEFAULT is special.\n        \"\"\"\n        if section is _UNSET:\n            return super().items()\n        d = self._defaults.copy()\n        try:\n            d.update(self._sections[section])\n        except KeyError:\n            if section != self.default_section:\n>               raise NoSectionError(section)\nE               configparser.NoSectionError: No section: 'cookie'\n\n/Users/nali/anaconda3/lib/python3.7/configparser.py:848: NoSectionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "setupClass",
    "time" : {
      "start" : 1617288487374,
      "stop" : 1617288487374,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "configparser.NoSectionError: No section: 'cookie'",
    "statusTrace" : "self = <common.config_module.config_read.ConfigOveride object at 0x112fad1d0>\nsection = 'cookie', raw = False, vars = None\n\n    def items(self, section=_UNSET, raw=False, vars=None):\n        \"\"\"Return a list of (name, value) tuples for each option in a section.\n    \n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n    \n        The section DEFAULT is special.\n        \"\"\"\n        if section is _UNSET:\n            return super().items()\n        d = self._defaults.copy()\n        try:\n>           d.update(self._sections[section])\nE           KeyError: 'cookie'\n\n/Users/nali/anaconda3/lib/python3.7/configparser.py:845: KeyError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_info.TestPremise object at 0x112fb9fd0>\ncase_data = {'address': '/mapi/user/info', 'check': {'check_type': 'Regular_check', 'expected_code': 200, 'expected_result': ['\"corpId\": 43', '\"corpCode\":${uidCode}$']}, 'cookies': True, 'file': False, ...}\nsetupClass = {}\n\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"], ids=[])\n    @allure.story(\"info\")\n    def test_case(self, case_data, setupClass):\n        self.relevance = setupTest(relevance_path, case_data, setupClass)\n>       api_send_check(case_data, case_dict, case_path, self.relevance)\n\n/Users/nali/AutoApiTest/tests/TestScript/infoApi/test_info.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Users/nali/AutoApiTest/common/unit/api_send_check.py:26: in api_send_check\n    res = api_send.api_send(case_data, case_dict, case_path, relevance)\n/Users/nali/AutoApiTest/common/unit/api_send.py:73: in api_send\n    cookie = read_relevance(cookie_path, 'cookie')\n/Users/nali/AutoApiTest/common/unit/initialize_relevance.py:22: in read_relevance\n    rele_dict = cf.read_config(key)\n/Users/nali/AutoApiTest/common/config_module/config_read.py:88: in read_config\n    option_value_list = cf.items(section)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <common.config_module.config_read.ConfigOveride object at 0x112fad1d0>\nsection = 'cookie', raw = False, vars = None\n\n    def items(self, section=_UNSET, raw=False, vars=None):\n        \"\"\"Return a list of (name, value) tuples for each option in a section.\n    \n        All % interpolations are expanded in the return values, based on the\n        defaults passed into the constructor, unless the optional argument\n        `raw' is true.  Additional substitutions may be provided using the\n        `vars' argument, which must be a dictionary whose contents overrides\n        any pre-existing defaults.\n    \n        The section DEFAULT is special.\n        \"\"\"\n        if section is _UNSET:\n            return super().items()\n        d = self._defaults.copy()\n        try:\n            d.update(self._sections[section])\n        except KeyError:\n            if section != self.default_section:\n>               raise NoSectionError(section)\nE               configparser.NoSectionError: No section: 'cookie'\n\n/Users/nali/anaconda3/lib/python3.7/configparser.py:848: NoSectionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "aa29902249ede1e0",
      "name" : "stdout",
      "source" : "aa29902249ede1e0.txt",
      "type" : "text/plain",
      "size" : 71
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "info"
  }, {
    "name" : "story",
    "value" : "info"
  }, {
    "name" : "parentSuite",
    "value" : "tests.TestScript.infoApi"
  }, {
    "name" : "suite",
    "value" : "test_info"
  }, {
    "name" : "subSuite",
    "value" : "TestPremise"
  }, {
    "name" : "host",
    "value" : "anqidediannao.local"
  }, {
    "name" : "thread",
    "value" : "38264-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.TestScript.infoApi.test_info"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "case_data",
    "value" : "{'test_name': 'info', 'info': '个人信息', 'is_run': None, 'host': '${HOST2}$', 'headers': '${headers1}$', 'address': '/mapi/user/info', 'http_type': 'https', 'request_type': 'get', 'parameter_type': None, 'parameter': None, 'cookies': True, 'timeout': 10, 'check': {'expected_result': ['\"corpId\": 43', '\"corpCode\":${uidCode}$'], 'check_type': 'Regular_check', 'expected_code': 200}, 'file': False, 'global_relevance': True, 'relevance': {'uid': 'uid', 'uidCode': 'uidCode'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "cd620c200a9af2de.json",
  "parameterValues" : [ "{'test_name': 'info', 'info': '个人信息', 'is_run': None, 'host': '${HOST2}$', 'headers': '${headers1}$', 'address': '/mapi/user/info', 'http_type': 'https', 'request_type': 'get', 'parameter_type': None, 'parameter': None, 'cookies': True, 'timeout': 10, 'check': {'expected_result': ['\"corpId\": 43', '\"corpCode\":${uidCode}$'], 'check_type': 'Regular_check', 'expected_code': 200}, 'file': False, 'global_relevance': True, 'relevance': {'uid': 'uid', 'uidCode': 'uidCode'}}" ]
}