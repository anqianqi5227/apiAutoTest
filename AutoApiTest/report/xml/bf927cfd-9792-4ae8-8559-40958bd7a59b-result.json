{"name": "test_case[login0-case_data0]", "status": "broken", "statusDetails": {"message": "KeyError: 'check'", "trace": "request = <SubRequest 'login' for <Function test_case[login0-case_data0]>>\n\n    @pytest.fixture(scope='function',autouse=True,params=case_dict['test_case'])\n    def login(request):\n        for i in [\"GlobalRelevance.ini\", \"ModuleRelevance.ini\"]:\n            relevance_file = os.path.join(relevance_path, i)\n            cf = Config(relevance_file)\n            # print(relevance_file)\n            cf.add_conf('relevance')\n        logging.info(\"执行全局用例依赖接口，初始化数据！\")\n        relevance = re.ini_relevance(re.read_relevance(case_path, 'relevance'))\n        print(relevance)\n>       api_send_check(request.param, case_dict, case_path, relevance)\n\n/Users/nali/AutoApiTest/conftest.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncase_data = {'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': False, 'file': False, ...}\ncase_dict = {'premise': [None], 'test_case': [{'address': '/passport/api/pwdLogin', 'check_type': 'only_check_status', 'cookies': ...e, 'file': False, ...}], 'test_info': {'address': None, 'case_level': 'blocker', 'cookies': False, 'file': False, ...}}\ncase_path = '/Users/nali/AutoApiTest/tests/CommonApi/loginApi'\nrelevance = {'sign_h5_login': 'F017A0CD674A8B7A4F52B56898D78E6A'}\n\n    def api_send_check(case_data, case_dict, case_path, relevance):\n        \"\"\"\n        验证测试是否通过并且将接口参数中的关联字段写入关联池\n        :param case_data: 测试case\n        :param case_dict: 测试用例文件\n        :param case_path: 用例文件路径\n        :param relevance: 用例关联池\n    \n        \"\"\"\n        # 获取接口返回值\n        # print(case_dict)\n        # print(case_dict['is_run'])\n        if case_data['is_run'] is not False:\n                # or case_data['is_run'] is None:\n            res = api_send.api_send(case_data, case_dict, case_path, relevance)\n            print(res)\n            test_name = case_data['test_name']\n>           check_data = case_data['check']\nE           KeyError: 'check'\n\n/Users/nali/AutoApiTest/common/unit/api_send_check.py:29: KeyError"}, "attachments": [{"name": "log", "source": "39b8f527-e1ac-410a-9273-6c2a2e9c4b2e-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "99a4abc9-5aff-4782-a176-2a35a3f18d6f-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "login", "value": "{'test_name': 'login_h5', 'info': '密码登录m站', 'is_run': None, 'host': '${HOST1}$', 'headers': '${headers1}$', 'address': '/passport/api/pwdLogin', 'http_type': 'https', 'request_type': 'post_cookie', 'parameter_type': 'data', 'parameter': {'passport': 17521200974, 'password': 'anqi666', 'passportType': 1, 'sign': 'F017A0CD674A8B7A4F52B56898D78E6A'}, 'timeout': 10, 'cookies': False, 'check_type': 'only_check_status', 'file': False, 'global_relevance': None, 'relevance': None}"}, {"name": "case_data", "value": "{'test_name': 'info', 'info': '个人信息', 'is_run': None, 'host': '${HOST2}$', 'headers': '${headers1}$', 'address': '/mapi/user/info', 'http_type': 'https', 'request_type': 'get', 'parameter_type': None, 'parameter': None, 'cookies': True, 'timeout': 10, 'check': {'expected_result': ['\"corpId\": 43', '\"corpCode\":${uidCode}$'], 'check_type': 'Regular_check', 'expected_code': 200}, 'file': False, 'global_relevance': True, 'relevance': {'uid': 'uid', 'uidCode': 'uidCode'}}"}], "start": 1617289439448, "stop": 1617289439448, "uuid": "06af33ae-28df-4f67-9acb-c8eccdf8f844", "historyId": "be27b079f5db00d7cf7f8c17365bf6a5", "testCaseId": "21b9860965d3d6bda259e0ba73bbd1e5", "fullName": "tests.TestScript.infoApi.test_info.TestPremise#test_case", "labels": [{"name": "feature", "value": "info"}, {"name": "story", "value": "info"}, {"name": "parentSuite", "value": "tests.TestScript.infoApi"}, {"name": "suite", "value": "test_info"}, {"name": "subSuite", "value": "TestPremise"}, {"name": "host", "value": "anqidediannao.local"}, {"name": "thread", "value": "39555-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestScript.infoApi.test_info"}]}