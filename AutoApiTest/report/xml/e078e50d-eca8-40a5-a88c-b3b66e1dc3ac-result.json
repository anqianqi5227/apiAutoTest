{"name": "test_case[case_data0]", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'", "trace": "self = <test_configsmain.TestConfigsmain object at 0x11abbfb38>\ncase_data = {'case_id': 1, 'check': {'check_type': 'Regular_check', 'expected_code': 200, 'expected_result': ['\"ret\": 0']}, 'global_relevance': None, 'info': None, ...}\nsetupClass = {}\n\n    @pytest.mark.skipif(case_dict[\"test_info\"][\"product_version\"] in product_version,\n                        reason=\"该用例所属版本为：{0}，在本次排除版本{1}内\".format(case_dict[\"test_info\"][\"product_version\"],\n                                                                 product_version))\n    @pytest.mark.skipif(case_dict[\"test_info\"][\"case_level\"] not in case_level,\n                        reason=\"该用例的用例等级为：{0}，不在本次运行级别{1}内\".format(case_dict[\"test_info\"][\"case_level\"], case_level))\n    @pytest.mark.run(order=case_dict[\"test_info\"][\"run_order\"])\n    @allure.severity(case_dict[\"test_info\"][\"case_level\"])\n    @pytest.mark.parametrize(\"case_data\", case_dict[\"test_case\"], ids=[])\n    @allure.story(\"configsmain\")\n    def test_case(self, case_data, setupClass):\n        self.relevance = setupTest(relevance_path, case_data, setupClass)\n>       api_send_check(case_data, case_dict, case_path, self.relevance)\n\n/Users/nali/AutoApiTest/tests/TestScript/configsmainApi/test_configsmain.py:47: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Users/nali/AutoApiTest/common/unit/api_send_check.py:26: in api_send_check\n    res = api_send.api_send(case_data, case_dict, case_path, relevance)\n/Users/nali/AutoApiTest/common/unit/api_send.py:117: in api_send\n    allure.attach(case_dict[\"info\"], \"用例描述：\")\n/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/_allure.py:176: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n/Users/nali/anaconda3/lib/python3.7/site-packages/allure_pytest/listener.py:220: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/reporter.py:117: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x11a961908>\nbody = None\nfile_name = 'f4e18ef9-33aa-4d1c-bbf4-95aac24b85dc-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not 'NoneType'\n\n/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/logger.py:62: TypeError"}, "steps": [{"name": "get请求接口", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not 'NoneType'\n", "trace": "  File \"/Users/nali/AutoApiTest/common/unit/api_send.py\", line 117, in api_send\n    allure.attach(case_dict[\"info\"], \"用例描述：\")\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/_allure.py\", line 176, in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\n    return outcome.get_result()\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/allure_pytest/listener.py\", line 220, in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/reporter.py\", line 117, in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 93, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/manager.py\", line 87, in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\n    return outcome.get_result()\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/Users/nali/anaconda3/lib/python3.7/site-packages/allure_commons/logger.py\", line 62, in report_attached_data\n    attached_file.write(body)\n"}, "attachments": [{"name": "请求接口：", "source": "735c65ee-ef61-42c7-b29a-a02186b3a6db-attachment.attach"}, {"name": "用例描述：", "source": "f4e18ef9-33aa-4d1c-bbf4-95aac24b85dc-attachment.attach"}], "start": 1617608244097, "stop": 1617608244097}], "attachments": [{"name": "log", "source": "9f8cf1c6-0b15-416b-91ab-915dd7b557ec-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "8a0ab6a3-9615-4067-a356-16228a084c13-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "case_data", "value": "{'test_name': 'configsmain_1', 'case_id': 1, 'is_run': None, 'info': None, 'parameter': None, 'check': {'expected_result': ['\"ret\": 0'], 'check_type': 'Regular_check', 'expected_code': 200}, 'global_relevance': None, 'relevance': None}"}], "start": 1617608244095, "stop": 1617608244098, "uuid": "98c7057b-8a5e-46f3-997e-46bc8f6fb120", "historyId": "6b8a88ec27cfece4a4af6d4e471fe067", "testCaseId": "36f3b19a4f735172c5e5452eb457a674", "fullName": "tests.TestScript.configsmainApi.test_configsmain.TestConfigsmain#test_case", "labels": [{"name": "feature", "value": "configsmain"}, {"name": "story", "value": "configsmain"}, {"name": "severity", "value": "blocker"}, {"name": "tag", "value": "run(order=1)"}, {"name": "tag", "value": "@pytest.mark.skipif(False, reason='该用例的用例等级为：blocker，不在本次运行级别['blocker', 'critical', 'normal', 'minor']内')"}, {"name": "parentSuite", "value": "tests.TestScript.configsmainApi"}, {"name": "suite", "value": "test_configsmain"}, {"name": "subSuite", "value": "TestConfigsmain"}, {"name": "host", "value": "anqidediannao.local"}, {"name": "thread", "value": "13305-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.TestScript.configsmainApi.test_configsmain"}]}